#
# CAMERA_MODEL "Adimec 1000M 10-bit camera continuous"
#

camera_class:           "Adimec"
camera_model:           "1600C/D"
camera_info:            "10-bit, camera continuous"

width:                  1600
height:                 1200
depth:                  24
extdepth:               10

# baud rate for adimec is 57.6 Kbaud
#
serial_baud: 57600

# initialize camera to: Mode 4 (2-tap continuous), 10 bits, no overscan
# (see Adimec operating and technical manual for complete info on
# Adimec's serial command set, and NOTE that their manuals (the
# version we have anyway) doesn't mention the REQUIRED '@' prefix
# before each command :-(
#
#serial_init: "@MO4:@OR10:@OS0"

# adimec serial exposure method is implemented internally to
# libpdv. min and max just used by apps who want to, e.g.
# pdvshow to set limits for sliders
#
shutter_speed_min: 1
shutter_speed_max: 4000
method_camera_shutter_timing: ADIMEC_SERIAL

# serial gain method for adimec embedded in libpdv
#
gain_min:                1
gain_max:                8

# serial offset (black level) method for adimec embedded in
# libpdv. note that offset has 2 channels, but pdvshow only has
# one slider so it controls both the same. user apps can control
# channel offset separately however, via pdv_set_blacklevel_adimec
# or pdv_serial_command()
#
offset_min:                0
offset_max:                4095

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
#
CL_DATA_PATH_NORM:      19

CL_CFG_NORM:		02
# BAYER DECODING
#
# turns on library interlace/reorder method 
# BGGR enables bayer decoding 8 bits; use BBGR_WORD for 10-12 bits
#
method_interlace:              BGGR_WORD

# depending on bayer filter on the sensor, these directives may need to
# be played with (switch 0 to 1 or vice versa on one or the other) to 
# get the bayer algorithm to match the output of the sensor and make
# the colors come out right
#
# Bayer pattern is GB/RG
#
kbs_red_row_first:             1 
kbs_green_pixel_first:         1

# just guessing here, never tried one in EDT labs, could be vtaps
#
htaps: 2

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip
#
vskip:                  0
hskip:                  0
hactv:                  1600
vactv:                  1200
